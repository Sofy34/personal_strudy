{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f91f9cf6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os,sys, imp, glob\n",
    "sys.path.append('./src/')\n",
    "import doc_utils_clean as doc_utils\n",
    "import pos_yap_process\n",
    "import feature_utils\n",
    "import common_utils\n",
    "import defines\n",
    "import numpy as np\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b3ff37f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "doc_list =  glob.glob(os.path.join(os.path.join(os.getcwd(),\"./tmp/*docx\")))\n",
    "doc_list.sort()\n",
    "doc_map = {}\n",
    "for idx,doc in enumerate(doc_list):\n",
    "    doc_map[common_utils.get_doc_idx_from_name(doc)] = doc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3df3ec23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "{1: '/path",
       " 2: '/path",
       " 3: '/path",
       " 4: '/path",
       " 5: '/path",
       " 6: '/path",
       " 7: '/path",
       " 8: '/path",
       " 9: '/path",
       " 10: '/path",
       " 11: '/path",
       " 12: '/path",
       " 13: '/path",
       " 14: '/path",
       " 15: '/path",
       " 16: '/path",
       " 17: '/path",
       " 18: '/path",
       " 19: '/path",
       " 20: '/path",
       " 21: '/path",
       " 22: '/path",
       " 23: '/path",
       " 24: '/path",
       " 25: '/path",
       " 26: '/path",
       " 27: '/path",
       " 28: '/path",
       " 29: '/path",
       " 30: '/path",
       " 31: '/path",
       " 32: '/path",
       " 33: '/path",
       " 34: '/path",
       " 35: '/path",
       " 36: '/path",
       " 37: '/path",
       " 38: '/path",
       " 39: '/path",
       " 40: '/path",
       " 41: '/path",
       " 42: '/path",
       " 43: '/path",
       " 44: '/path",
       " 45: '/path",
       " 46: '/path",
       " 47: '/path",
       " 48: '/path",
       " 49: '/path",
       " 50: '/path",
       " 51: '/path",
       " 52: '/path",
       " 53: '/path",
       " 54: '/path",
       " 55: '/path",
       " 56: '/path",
       " 57: '/path",
       " 58: '/path",
       " 59: '/path",
       " 60: '/path",
       " 61: '/path",
       " 62: '/path",
       " 63: '/path",
       " 64: '/path",
       " 65: '/path",
       " 66: '/path",
       " 67: '/path",
       " 68: '/path",
       " 69: '/path",
       " 70: '/path",
       " 71: '/path",
       " 72: '/path",
       " 73: '/path",
       " 74: '/path",
       " 75: '/path",
       " 76: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/76_nun2_Mor.docx',\n",
       " 77: '/path",
       " 78: '/path",
       " 79: '/path",
       " 80: '/path
=======
       "{1: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/01_aingimel3_lc.docx',\n",
       " 2: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/02_aingimel12_lc.docx',\n",
       " 3: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/03_aingimel26_lc.docx',\n",
       " 4: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/04_nun2_lc.docx',\n",
       " 5: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/05_kafhey_23_lc.docx',\n",
       " 6: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/06_lamedbet21_lc.docx',\n",
       " 7: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/07_alefsameh3_lc.docx',\n",
       " 8: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/08_kafdalet_15_lc.docx',\n",
       " 9: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/09_lametbet13_Dana.docx',\n",
       " 10: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/10_aingimel5_Mor.docx',\n",
       " 11: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/11_aingimel10_Mor.docx',\n",
       " 12: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/12_aingimel16_Mor.docx',\n",
       " 13: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/13_aingimel18_Mor.docx',\n",
       " 14: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/14_aingimel22_Mor.docx',\n",
       " 15: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/15_aingimel24_Mor.docx',\n",
       " 16: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/16_aingimel7_Mor.docx',\n",
       " 17: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/17_samehAleph16_DanaMor.docx',\n",
       " 18: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/18_kafTet7_DanaMor.docx',\n",
       " 19: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/19_tsadek13_DanaMor.docx',\n",
       " 20: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/20_kafDalet3_Dana.docx',\n",
       " 21: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/21_kafHey3_Dana.docx',\n",
       " 22: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/22_kafDalet5_Dana.docx',\n",
       " 23: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/23_kafDalet7_Dana.docx',\n",
       " 24: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/24_kafHey5_Dana.docx',\n",
       " 25: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/25_kafDalet9_Dana.docx',\n",
       " 26: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/26_kafHey9_Dana.docx',\n",
       " 27: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/27_kafDalet11_Dana.docx',\n",
       " 28: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/28_kafHey11_Dana.docx',\n",
       " 29: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/29_kafHey12_Dana.docx',\n",
       " 30: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/30_kafDalet15_Dana.docx',\n",
       " 31: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/31_kafHey15_Dana.docx',\n",
       " 32: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/32_kafDalet17_Dana.docx',\n",
       " 33: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/33_kafHey17_Dana.docx',\n",
       " 34: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/34_kafHey18_Dana.docx',\n",
       " 35: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/35_kafHey20_Dana.docx',\n",
       " 36: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/36_kafTet2_Dana.docx',\n",
       " 37: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/37_kafTet3_Dana.docx',\n",
       " 38: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/38_kafTet5_Dana.docx',\n",
       " 39: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/39_kafTet9_Dana.docx',\n",
       " 40: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/40_kafTet11_Dana.docx',\n",
       " 41: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/41_kafTet14_Dana.docx',\n",
       " 42: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/42_kafTet17_Dana.docx',\n",
       " 43: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/43_kafTet18_Dana.docx',\n",
       " 44: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/44_nun23_Mor.docx',\n",
       " 45: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/45_tsadek4_Mor.docx',\n",
       " 46: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/46_tsadek23_Mor.docx',\n",
       " 47: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/47_tsadek19_Mor.docx',\n",
       " 48: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/48_nun17_Mor.docx',\n",
       " 49: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/49_tsadek15_Mor.docx',\n",
       " 50: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/50_nun14_Mor.docx',\n",
       " 51: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/51_nun10_Mor.docx',\n",
       " 52: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/52_tsadek9_Mor.docx',\n",
       " 53: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/53_nun8_Mor.docx',\n",
       " 54: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/54_nun19_Mor.docx',\n",
       " 55: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/55_tsadek2_Mor.docx',\n",
       " 56: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/56_samehalef15_Mor.docx',\n",
       " 57: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/57_samehalef14_Mor.docx',\n",
       " 58: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/58_samehalef13_Mor.docx',\n",
       " 59: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/59_samehalef11_Mor.docx',\n",
       " 60: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/60_samehalef9_Mor.docx',\n",
       " 61: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/61_samehalef7_Mor.docx',\n",
       " 62: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/62_samehalef5_Mor.docx',\n",
       " 63: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/63_samehalef4_Mor.docx',\n",
       " 64: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/64_lametbet3_Dana.docx',\n",
       " 65: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/65_lametbet7_Dana.docx',\n",
       " 66: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/66_lametbet9_Dana.docx',\n",
       " 67: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/67_lametbet11_Dana.docx',\n",
       " 68: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/68_lametbet15_Dana.docx',\n",
       " 69: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/69_lametbet17_Dana.docx',\n",
       " 70: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/70_tsadek25_Mor.docx',\n",
       " 71: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/71_aingimel12_Mor.docx',\n",
       " 72: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/72_lametbet19_Mor.docx',\n",
       " 73: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/73_kafDalet19_Dana.docx',\n",
       " 74: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/74_kafDalet21_Dana.docx',\n",
       " 75: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/75_kafDalet23_Dana.docx',\n",
       " 76: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/76_nun2_Mor.docx',\n",
       " 77: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/77_nun25_Mor.docx',\n",
       " 78: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/78_tsadek27_Mor.docx',\n",
       " 79: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/79_tsadek29_Mor.docx',\n",
       " 80: '/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/80_nun28_Mor.docx'}"
>>>>>>> parent of 397c5bb... remove absolute path from outputs
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "doc_map"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "313f939c",
   "metadata": {},
   "source": [
    "### Add new 76 document"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4ad6ab17",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "496 sentences "
     ]
    }
   ],
   "source": [
    "doc_idx=76\n",
    "dir_name='reparse'\n",
    "doc_db_path = os.path.join(os.getcwd(), defines.PATH_TO_DFS, dir_name,\"doc_db.csv\")\n",
    "doc_utils.doc_db = pd.read_csv(doc_db_path)\n",
    "doc_utils.parse_doc(dir_name,int(doc_idx),merge_short_sent=True,single=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "250818c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "dir_name=\"reparse\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f37c4e5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'reparse'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2aba508",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "33935f2a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "51bbca1f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "53e595a5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "d4c27595",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating doc_db\n",
      "ERROR: file /scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/./tmp/agreement does not exists\n",
      "613 sentences 0 652 sentences 1 682 sentences 2 471 sentences 3 513 sentences 4 810 sentences 5 466 sentences 6 399 sentences 7 588 sentences 8 406 sentences 9 737 sentences 10 741 sentences 11 750 sentences 12 668 sentences 13 693 sentences 14 423 sentences 15 578 sentences 16 167 sentences 17 353 sentences 18 426 sentences 19 585 sentences 20 474 sentences 21 342 sentences 22 667 sentences 23 469 sentences 24 455 sentences 25 354 sentences 26 554 sentences 27 525 sentences 28 395 sentences 29 441 sentences 30 441 sentences 31 459 sentences 32 378 sentences 33 481 sentences 34 165 sentences 35 180 sentences 36 172 sentences 37 175 sentences 38 219 sentences 39 190 sentences 40 192 sentences 41 188 sentences 42 534 sentences 43 246 sentences 44 266 sentences 45 208 sentences 46 518 sentences 47 299 sentences 48 480 sentences 49 532 sentences 50 582 sentences 51 411 sentences 52 554 sentences 53 341 sentences 54 553 sentences 55 464 sentences 56 602 sentences 57 664 sentences 58 457 sentences 59 656 sentences 60 411 sentences 61 565 sentences 62 761 sentences 63 682 sentences 64 795 sentences 65 831 sentences 66 899 sentences 67 985 sentences 68 248 sentences 69 655 sentences 70 843 sentences 71 384 sentences 72 406 sentences 73 423 sentences 74 475 sentences 75 439 sentences 76 186 sentences 77 259 sentences 78 530 sentences 79 "
     ]
    }
   ],
   "source": [
    "imp.reload(doc_utils)\n",
    "imp.reload(defines)\n",
    "imp.reload(feature_utils)\n",
    "doc_utils.parse_all_docs(dir_name,merge_short_sent=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7fd0e87a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['dataframes/reparse/01_sent_db.csv',\n",
       " 'dataframes/reparse/02_sent_db.csv',\n",
       " 'dataframes/reparse/03_sent_db.csv',\n",
       " 'dataframes/reparse/04_sent_db.csv',\n",
       " 'dataframes/reparse/05_sent_db.csv',\n",
       " 'dataframes/reparse/06_sent_db.csv',\n",
       " 'dataframes/reparse/07_sent_db.csv',\n",
       " 'dataframes/reparse/08_sent_db.csv',\n",
       " 'dataframes/reparse/09_sent_db.csv',\n",
       " 'dataframes/reparse/10_sent_db.csv',\n",
       " 'dataframes/reparse/11_sent_db.csv',\n",
       " 'dataframes/reparse/12_sent_db.csv',\n",
       " 'dataframes/reparse/13_sent_db.csv',\n",
       " 'dataframes/reparse/14_sent_db.csv',\n",
       " 'dataframes/reparse/15_sent_db.csv',\n",
       " 'dataframes/reparse/16_sent_db.csv',\n",
       " 'dataframes/reparse/17_sent_db.csv',\n",
       " 'dataframes/reparse/18_sent_db.csv',\n",
       " 'dataframes/reparse/19_sent_db.csv',\n",
       " 'dataframes/reparse/20_sent_db.csv',\n",
       " 'dataframes/reparse/21_sent_db.csv',\n",
       " 'dataframes/reparse/22_sent_db.csv',\n",
       " 'dataframes/reparse/23_sent_db.csv',\n",
       " 'dataframes/reparse/24_sent_db.csv',\n",
       " 'dataframes/reparse/25_sent_db.csv',\n",
       " 'dataframes/reparse/26_sent_db.csv',\n",
       " 'dataframes/reparse/27_sent_db.csv',\n",
       " 'dataframes/reparse/28_sent_db.csv',\n",
       " 'dataframes/reparse/29_sent_db.csv',\n",
       " 'dataframes/reparse/30_sent_db.csv',\n",
       " 'dataframes/reparse/31_sent_db.csv',\n",
       " 'dataframes/reparse/32_sent_db.csv',\n",
       " 'dataframes/reparse/33_sent_db.csv',\n",
       " 'dataframes/reparse/34_sent_db.csv',\n",
       " 'dataframes/reparse/35_sent_db.csv',\n",
       " 'dataframes/reparse/36_sent_db.csv',\n",
       " 'dataframes/reparse/37_sent_db.csv',\n",
       " 'dataframes/reparse/38_sent_db.csv',\n",
       " 'dataframes/reparse/39_sent_db.csv',\n",
       " 'dataframes/reparse/40_sent_db.csv',\n",
       " 'dataframes/reparse/41_sent_db.csv',\n",
       " 'dataframes/reparse/42_sent_db.csv',\n",
       " 'dataframes/reparse/43_sent_db.csv',\n",
       " 'dataframes/reparse/44_sent_db.csv',\n",
       " 'dataframes/reparse/45_sent_db.csv',\n",
       " 'dataframes/reparse/46_sent_db.csv',\n",
       " 'dataframes/reparse/47_sent_db.csv',\n",
       " 'dataframes/reparse/48_sent_db.csv',\n",
       " 'dataframes/reparse/49_sent_db.csv',\n",
       " 'dataframes/reparse/50_sent_db.csv',\n",
       " 'dataframes/reparse/51_sent_db.csv',\n",
       " 'dataframes/reparse/52_sent_db.csv',\n",
       " 'dataframes/reparse/53_sent_db.csv',\n",
       " 'dataframes/reparse/54_sent_db.csv',\n",
       " 'dataframes/reparse/55_sent_db.csv',\n",
       " 'dataframes/reparse/56_sent_db.csv',\n",
       " 'dataframes/reparse/57_sent_db.csv',\n",
       " 'dataframes/reparse/58_sent_db.csv',\n",
       " 'dataframes/reparse/59_sent_db.csv',\n",
       " 'dataframes/reparse/60_sent_db.csv',\n",
       " 'dataframes/reparse/61_sent_db.csv',\n",
       " 'dataframes/reparse/62_sent_db.csv',\n",
       " 'dataframes/reparse/63_sent_db.csv',\n",
       " 'dataframes/reparse/64_sent_db.csv',\n",
       " 'dataframes/reparse/65_sent_db.csv',\n",
       " 'dataframes/reparse/66_sent_db.csv',\n",
       " 'dataframes/reparse/67_sent_db.csv',\n",
       " 'dataframes/reparse/68_sent_db.csv',\n",
       " 'dataframes/reparse/69_sent_db.csv',\n",
       " 'dataframes/reparse/70_sent_db.csv',\n",
       " 'dataframes/reparse/71_sent_db.csv',\n",
       " 'dataframes/reparse/72_sent_db.csv',\n",
       " 'dataframes/reparse/73_sent_db.csv',\n",
       " 'dataframes/reparse/74_sent_db.csv',\n",
       " 'dataframes/reparse/75_sent_db.csv',\n",
       " 'dataframes/reparse/76_sent_db.csv',\n",
       " 'dataframes/reparse/77_sent_db.csv',\n",
       " 'dataframes/reparse/78_sent_db.csv',\n",
       " 'dataframes/reparse/79_sent_db.csv',\n",
       " 'dataframes/reparse/80_sent_db.csv']"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sent_db_list = glob.glob(os.path.join('dataframes',dir_name,\"*_sent_db.csv\"))\n",
    "sent_db_list.sort()\n",
    "sent_db_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5eaed1e",
   "metadata": {},
   "source": [
    "### Get pos tagging per sentence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2e1fecca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<subprocess.Popen at 0x2b67008a0e50>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "imp.reload(pos_yap_process)\n",
    "yap_proc = pos_yap_process.start_yap_api()\n",
    "yap_proc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "71fda3a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "yap_proc.terminate()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8ee44320",
   "metadata": {},
   "outputs": [
    {
<<<<<<< HEAD
     "data": {
      "text/plain": [
       "{'ma_lattice': '0\\t1\\tגנן\\tגינן\\tVB\\tVB\\tgen=M|num=S|per=2|tense=IMPERATIVE\\t1\\n0\\t1\\tגנן\\tגן\\tNN\\tNN\\tgen=M|num=S|suf_gen=F|suf_num=P|suf_per=3\\t1\\n0\\t1\\tגנן\\tגנן\\tNN\\tNN\\tgen=M|num=S\\t1\\n0\\t1\\tגנן\\tגנן\\tNNT\\tNNT\\tgen=M|num=S\\t1\\n0\\t1\\tגנן\\tגינן\\tVB\\tVB\\tgen=M|num=S|per=3|tense=PAST\\t1\\n1\\t2\\tגידל\\tגידל\\tVB\\tVB\\tgen=M|num=S|per=3|tense=PAST\\t2\\n2\\t3\\tדג\\tדג\\tBN\\tBN\\tgen=M|num=S|per=A\\t3\\n2\\t5\\tדגן\\tדגן\\tNNP\\tNNP\\tgen=M|num=S\\t3\\n2\\t5\\tדגן\\tדג\\tNN\\tNN\\tgen=M|num=S|suf_gen=F|suf_num=P|suf_per=3\\t3\\n2\\t5\\tדגן\\tדגן\\tNN\\tNN\\tgen=M|num=S\\t3\\n2\\t5\\tדגן\\tדגן\\tNNT\\tNNT\\tgen=M|num=S\\t3\\n3\\t4\\tאת\\tאת\\tPOS\\tPOS\\t_\\t3\\n4\\t5\\tהן\\tהן\\tS_PRN\\tS_PRN\\tgen=F|num=P|per=3\\t3\\n5\\t6\\tב\\tב\\tPREPOSITION\\tPREPOSITION\\t_\\t4\\n5\\t8\\tבגן\\tבגן\\tNNP\\tNNP\\tgen=M|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNN\\tNN\\tgen=M|num=P|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNN\\tNN\\tgen=M|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNNP\\tNNP\\tgen=F|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNNP\\tNNP\\tgen=F|gen=M|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNNP\\tNNP\\t_\\t4\\n5\\t8\\tבגן\\tבגן\\tNN\\tNN\\tgen=M|num=P\\t4\\n5\\t8\\tבגן\\tבגן\\tNN\\tNN\\tgen=F|num=S\\t4\\n5\\t8\\tבגן\\tבגן\\tNN\\tNN\\tgen=F|num=P\\t4\\n6\\t8\\tגן\\tגן\\tNN\\tNN\\tgen=M|num=S\\t4\\n6\\t8\\tגן\\tגן\\tNNT\\tNNT\\tgen=M|num=S\\t4\\n6\\t7\\tה\\tה\\tDEF\\tDEF\\t_\\t4\\n7\\t8\\tגן\\tגן\\tNNT\\tNNT\\tgen=M|num=S\\t4\\n7\\t8\\tגן\\tגן\\tNN\\tNN\\tgen=M|num=S\\t4\\n\\n',\n",
       " 'md_lattice': '0\\t1\\tגנן\\tגנן\\tNN\\tNN\\tgen=M|num=S\\t1\\n1\\t2\\tגידל\\tגידל\\tVB\\tVB\\tgen=M|num=S|per=3|tense=PAST\\t2\\n2\\t3\\tדגן\\tדגן\\tNN\\tNN\\tgen=M|num=S\\t3\\n3\\t4\\tב\\tב\\tPREPOSITION\\tPREPOSITION\\t_\\t4\\n4\\t5\\tה\\tה\\tDEF\\tDEF\\t_\\t4\\n5\\t6\\tגן\\tגן\\tNN\\tNN\\tgen=M|num=S\\t4\\n\\n',\n",
       " 'dep_tree': '1\\tגנן\\tגנן\\tNN\\tNN\\tgen=M|num=S\\t2\\tsubj\\t_\\t_\\n2\\tגידל\\tגידל\\tVB\\tVB\\tgen=M|num=S|per=3|tense=PAST\\t0\\tROOT\\t_\\t_\\n3\\tדגן\\tדגן\\tNN\\tNN\\tgen=M|num=S\\t2\\tobj\\t_\\t_\\n4\\tב\\tב\\tPREPOSITION\\tPREPOSITION\\t\\t2\\tprepmod\\t_\\t_\\n5\\tה\\tה\\tDEF\\tDEF\\t\\t6\\tdef\\t_\\t_\\n6\\tגן\\tגן\\tNN\\tNN\\tgen=M|num=S\\t4\\tpobj\\t_\\t_\\n\\n'}"
      "\u001b[0;32m/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/src/pos_yap_process.py\u001b[0m in \u001b[0;36mtry_yap\u001b[0;34m()\u001b[0m\n\u001b[1;32m     41\u001b[0m     )  # input string ends with two space characters\n\u001b[1;32m     42\u001b[0m     \u001b[0mheaders\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"content-type\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"application/json\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlocalhost_yap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheaders\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0mjson_response\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mjson_response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
=======
     "ename": "ConnectionError",
     "evalue": "HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /yap/heb/joint (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x2aeb0c026df0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mConnectionRefusedError\u001b[0m                    Traceback (most recent call last)",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36m_new_conn\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    168\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 169\u001b[0;31m             conn = connection.create_connection(\n\u001b[0m\u001b[1;32m    170\u001b[0m                 \u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dns_host\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mport\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mextra_kw\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/util/connection.py\u001b[0m in \u001b[0;36mcreate_connection\u001b[0;34m(address, timeout, source_address, socket_options)\u001b[0m\n\u001b[1;32m     95\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0merr\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 96\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     97\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/util/connection.py\u001b[0m in \u001b[0;36mcreate_connection\u001b[0;34m(address, timeout, source_address, socket_options)\u001b[0m\n\u001b[1;32m     85\u001b[0m                 \u001b[0msock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msource_address\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 86\u001b[0;31m             \u001b[0msock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msa\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     87\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msock\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mConnectionRefusedError\u001b[0m: [Errno 111] Connection refused",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mNewConnectionError\u001b[0m                        Traceback (most recent call last)",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    698\u001b[0m             \u001b[0;31m# Make the request on the httplib connection object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 699\u001b[0;31m             httplib_response = self._make_request(\n\u001b[0m\u001b[1;32m    700\u001b[0m                 \u001b[0mconn\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_make_request\u001b[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)\u001b[0m\n\u001b[1;32m    393\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 394\u001b[0;31m                 \u001b[0mconn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mhttplib_request_kw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    395\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, body, headers)\u001b[0m\n\u001b[1;32m    233\u001b[0m             \u001b[0mheaders\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"User-Agent\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_get_default_user_agent\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 234\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mHTTPConnection\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbody\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheaders\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    235\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/tools/common/apps/python/3.8.5/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, body, headers, encode_chunked)\u001b[0m\n\u001b[1;32m   1254\u001b[0m         \u001b[0;34m\"\"\"Send a complete request to the server.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1255\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_send_request\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheaders\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencode_chunked\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1256\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/tools/common/apps/python/3.8.5/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36m_send_request\u001b[0;34m(self, method, url, body, headers, encode_chunked)\u001b[0m\n\u001b[1;32m   1300\u001b[0m             \u001b[0mbody\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_encode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'body'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1301\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mendheaders\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencode_chunked\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencode_chunked\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1302\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/tools/common/apps/python/3.8.5/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36mendheaders\u001b[0;34m(self, message_body, encode_chunked)\u001b[0m\n\u001b[1;32m   1249\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mCannotSendHeader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1250\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_send_output\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage_body\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencode_chunked\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencode_chunked\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1251\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/tools/common/apps/python/3.8.5/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36m_send_output\u001b[0;34m(self, message_body, encode_chunked)\u001b[0m\n\u001b[1;32m   1009\u001b[0m         \u001b[0;32mdel\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_buffer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1010\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1011\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/tools/common/apps/python/3.8.5/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, data)\u001b[0m\n\u001b[1;32m    949\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mauto_open\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36mconnect\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    199\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 200\u001b[0;31m         \u001b[0mconn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_new_conn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    201\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_prepare_conn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36m_new_conn\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    180\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mSocketError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m             raise NewConnectionError(\n\u001b[0m\u001b[1;32m    182\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Failed to establish a new connection: %s\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNewConnectionError\u001b[0m: <urllib3.connection.HTTPConnection object at 0x2aeb0c026df0>: Failed to establish a new connection: [Errno 111] Connection refused",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mMaxRetryError\u001b[0m                             Traceback (most recent call last)",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    438\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mchunked\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 439\u001b[0;31m                 resp = conn.urlopen(\n\u001b[0m\u001b[1;32m    440\u001b[0m                     \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    754\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 755\u001b[0;31m             retries = retries.increment(\n\u001b[0m\u001b[1;32m    756\u001b[0m                 \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_pool\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_stacktrace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexc_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/urllib3/util/retry.py\u001b[0m in \u001b[0;36mincrement\u001b[0;34m(self, method, url, response, error, _pool, _stacktrace)\u001b[0m\n\u001b[1;32m    573\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnew_retry\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_exhausted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 574\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mMaxRetryError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mResponseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcause\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    575\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mMaxRetryError\u001b[0m: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /yap/heb/joint (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x2aeb0c026df0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mConnectionError\u001b[0m                           Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-52-394dd131e0ad>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mimp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpos_yap_process\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0myap_response\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpos_yap_process\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtry_yap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0myap_response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/scratch/sim_reg6/users/zsofya/classroom/MSc/personal_study/thesis/src/pos_yap_process.py\u001b[0m in \u001b[0;36mtry_yap\u001b[0;34m()\u001b[0m\n\u001b[1;32m     41\u001b[0m     )  # input string ends with two space characters\n\u001b[1;32m     42\u001b[0m     \u001b[0mheaders\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"content-type\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"application/json\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlocalhost_yap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheaders\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0mjson_response\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mjson_response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/api.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(url, params, **kwargs)\u001b[0m\n\u001b[1;32m     74\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m     \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'allow_redirects'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'get'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/api.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(method, url, **kwargs)\u001b[0m\n\u001b[1;32m     59\u001b[0m     \u001b[0;31m# cases, and look like a memory leak in others.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0msessions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSession\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 61\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     62\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\u001b[0m\n\u001b[1;32m    540\u001b[0m         }\n\u001b[1;32m    541\u001b[0m         \u001b[0msend_kwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msettings\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 542\u001b[0;31m         \u001b[0mresp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0msend_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    543\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    544\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, **kwargs)\u001b[0m\n\u001b[1;32m    653\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    654\u001b[0m         \u001b[0;31m# Send the request\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 655\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0madapter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    656\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    657\u001b[0m         \u001b[0;31m# Total elapsed time of the request (approximately)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    514\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mSSLError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    515\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 516\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mClosedPoolError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mConnectionError\u001b[0m: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /yap/heb/joint (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x2aeb0c026df0>: Failed to establish a new connection: [Errno 111] Connection refused'))"
     ]
>>>>>>> parent of 397c5bb... remove absolute path from outputs
    }
   ],
   "source": [
    "imp.reload(pos_yap_process)\n",
    "yap_response = pos_yap_process.try_yap()\n",
    "yap_response"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "972cf1ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'dataframes/reparse/76_sent_db.csv'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sent_db_list[75]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4b341204",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Started doc 0 of 1\n",
      "0 got response\n",
      "100 got response\n",
      "200 got response\n",
      "300 got response\n",
      "400 got response\n",
      "Saved db 76_sent_pos_db.csv\n"
     ]
    }
   ],
   "source": [
    "imp.reload(pos_yap_process)\n",
    "pos_yap_process.parse_all_sentenses([sent_db_list[75]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "092bf801",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'reparse_no_merge'"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir_name"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8996d23",
   "metadata": {},
   "source": [
    "## Save features to db (merged, lemma, sim vectors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a8e66b62",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "76 sent lemma db saved\n",
      "76 sent count db saved\n",
      "76 sent features db saved\n",
      "76 doc sent saved\n",
      "76 sim_db sent saved\n"
     ]
    }
   ],
   "source": [
    "ft = feature_utils.load_fasstex_model()\n",
    "feature_utils.save_doc_features(dir_name,int(doc_idx),ft)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "22c07938",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 sent lemma db saved\n",
      "1 sent count db saved\n",
      "1 sent features db saved\n",
      "1 doc sent saved\n",
      "1 sim_db sent saved\n",
      "2 sent lemma db saved\n",
      "2 sent count db saved\n",
      "2 sent features db saved\n",
      "2 doc sent saved\n",
      "2 sim_db sent saved\n",
      "3 sent lemma db saved\n",
      "3 sent count db saved\n",
      "3 sent features db saved\n",
      "3 doc sent saved\n",
      "3 sim_db sent saved\n",
      "4 sent lemma db saved\n",
      "4 sent count db saved\n",
      "4 sent features db saved\n",
      "4 doc sent saved\n",
      "4 sim_db sent saved\n",
      "5 sent lemma db saved\n",
      "5 sent count db saved\n",
      "5 sent features db saved\n",
      "5 doc sent saved\n",
      "5 sim_db sent saved\n",
      "6 sent lemma db saved\n",
      "6 sent count db saved\n",
      "6 sent features db saved\n",
      "6 doc sent saved\n",
      "6 sim_db sent saved\n",
      "7 sent lemma db saved\n",
      "7 sent count db saved\n",
      "7 sent features db saved\n",
      "7 doc sent saved\n",
      "7 sim_db sent saved\n",
      "8 sent lemma db saved\n",
      "8 sent count db saved\n",
      "8 sent features db saved\n",
      "8 doc sent saved\n",
      "8 sim_db sent saved\n",
      "9 sent lemma db saved\n",
      "9 sent count db saved\n",
      "9 sent features db saved\n",
      "9 doc sent saved\n",
      "9 sim_db sent saved\n",
      "10 sent lemma db saved\n",
      "10 sent count db saved\n",
      "10 sent features db saved\n",
      "10 doc sent saved\n",
      "10 sim_db sent saved\n",
      "11 sent lemma db saved\n",
      "11 sent count db saved\n",
      "11 sent features db saved\n",
      "11 doc sent saved\n",
      "11 sim_db sent saved\n",
      "12 sent lemma db saved\n",
      "12 sent count db saved\n",
      "12 sent features db saved\n",
      "12 doc sent saved\n",
      "12 sim_db sent saved\n",
      "13 sent lemma db saved\n",
      "13 sent count db saved\n",
      "13 sent features db saved\n",
      "13 doc sent saved\n",
      "13 sim_db sent saved\n",
      "14 sent lemma db saved\n",
      "14 sent count db saved\n",
      "14 sent features db saved\n",
      "14 doc sent saved\n",
      "14 sim_db sent saved\n",
      "15 sent lemma db saved\n",
      "15 sent count db saved\n",
      "15 sent features db saved\n",
      "15 doc sent saved\n",
      "15 sim_db sent saved\n",
      "16 sent lemma db saved\n",
      "16 sent count db saved\n",
      "16 sent features db saved\n",
      "16 doc sent saved\n",
      "16 sim_db sent saved\n",
      "17 sent lemma db saved\n",
      "17 sent count db saved\n",
      "17 sent features db saved\n",
      "17 doc sent saved\n",
      "17 sim_db sent saved\n",
      "18 sent lemma db saved\n",
      "18 sent count db saved\n",
      "18 sent features db saved\n",
      "18 doc sent saved\n",
      "18 sim_db sent saved\n",
      "19 sent lemma db saved\n",
      "19 sent count db saved\n",
      "19 sent features db saved\n",
      "19 doc sent saved\n",
      "19 sim_db sent saved\n",
      "20 sent lemma db saved\n",
      "20 sent count db saved\n",
      "20 sent features db saved\n",
      "20 doc sent saved\n",
      "20 sim_db sent saved\n",
      "21 sent lemma db saved\n",
      "21 sent count db saved\n",
      "21 sent features db saved\n",
      "21 doc sent saved\n",
      "21 sim_db sent saved\n",
      "22 sent lemma db saved\n",
      "22 sent count db saved\n",
      "22 sent features db saved\n",
      "22 doc sent saved\n",
      "22 sim_db sent saved\n",
      "23 sent lemma db saved\n",
      "23 sent count db saved\n",
      "23 sent features db saved\n",
      "23 doc sent saved\n",
      "23 sim_db sent saved\n",
      "24 sent lemma db saved\n",
      "24 sent count db saved\n",
      "24 sent features db saved\n",
      "24 doc sent saved\n",
      "24 sim_db sent saved\n",
      "25 sent lemma db saved\n",
      "25 sent count db saved\n",
      "25 sent features db saved\n",
      "25 doc sent saved\n",
      "25 sim_db sent saved\n",
      "26 sent lemma db saved\n",
      "26 sent count db saved\n",
      "26 sent features db saved\n",
      "26 doc sent saved\n",
      "26 sim_db sent saved\n",
      "27 sent lemma db saved\n",
      "27 sent count db saved\n",
      "27 sent features db saved\n",
      "27 doc sent saved\n",
      "27 sim_db sent saved\n",
      "28 sent lemma db saved\n",
      "28 sent count db saved\n",
      "28 sent features db saved\n",
      "28 doc sent saved\n",
      "28 sim_db sent saved\n",
      "29 sent lemma db saved\n",
      "29 sent count db saved\n",
      "29 sent features db saved\n",
      "29 doc sent saved\n",
      "29 sim_db sent saved\n",
      "30 sent lemma db saved\n",
      "30 sent count db saved\n",
      "30 sent features db saved\n",
      "30 doc sent saved\n",
      "30 sim_db sent saved\n",
      "31 sent lemma db saved\n",
      "31 sent count db saved\n",
      "31 sent features db saved\n",
      "31 doc sent saved\n",
      "31 sim_db sent saved\n",
      "32 sent lemma db saved\n",
      "32 sent count db saved\n",
      "32 sent features db saved\n",
      "32 doc sent saved\n",
      "32 sim_db sent saved\n",
      "33 sent lemma db saved\n",
      "33 sent count db saved\n",
      "33 sent features db saved\n",
      "33 doc sent saved\n",
      "33 sim_db sent saved\n",
      "34 sent lemma db saved\n",
      "34 sent count db saved\n",
      "34 sent features db saved\n",
      "34 doc sent saved\n",
      "34 sim_db sent saved\n",
      "35 sent lemma db saved\n",
      "35 sent count db saved\n",
      "35 sent features db saved\n",
      "35 doc sent saved\n",
      "35 sim_db sent saved\n",
      "36 sent lemma db saved\n",
      "36 sent count db saved\n",
      "36 sent features db saved\n",
      "36 doc sent saved\n",
      "36 sim_db sent saved\n",
      "37 sent lemma db saved\n",
      "37 sent count db saved\n",
      "37 sent features db saved\n",
      "37 doc sent saved\n",
      "37 sim_db sent saved\n",
      "38 sent lemma db saved\n",
      "38 sent count db saved\n",
      "38 sent features db saved\n",
      "38 doc sent saved\n",
      "38 sim_db sent saved\n",
      "39 sent lemma db saved\n",
      "39 sent count db saved\n",
      "39 sent features db saved\n",
      "39 doc sent saved\n",
      "39 sim_db sent saved\n",
      "40 sent lemma db saved\n",
      "40 sent count db saved\n",
      "40 sent features db saved\n",
      "40 doc sent saved\n",
      "40 sim_db sent saved\n",
      "41 sent lemma db saved\n",
      "41 sent count db saved\n",
      "41 sent features db saved\n",
      "41 doc sent saved\n",
      "41 sim_db sent saved\n",
      "42 sent lemma db saved\n",
      "42 sent count db saved\n",
      "42 sent features db saved\n",
      "42 doc sent saved\n",
      "42 sim_db sent saved\n",
      "43 sent lemma db saved\n",
      "43 sent count db saved\n",
      "43 sent features db saved\n",
      "43 doc sent saved\n",
      "43 sim_db sent saved\n",
      "44 sent lemma db saved\n",
      "44 sent count db saved\n",
      "44 sent features db saved\n",
      "44 doc sent saved\n",
      "44 sim_db sent saved\n",
      "45 sent lemma db saved\n",
      "45 sent count db saved\n",
      "45 sent features db saved\n",
      "45 doc sent saved\n",
      "45 sim_db sent saved\n",
      "46 sent lemma db saved\n",
      "46 sent count db saved\n",
      "46 sent features db saved\n",
      "46 doc sent saved\n",
      "46 sim_db sent saved\n",
      "47 sent lemma db saved\n",
      "47 sent count db saved\n",
      "47 sent features db saved\n",
      "47 doc sent saved\n",
      "47 sim_db sent saved\n",
      "48 sent lemma db saved\n",
      "48 sent count db saved\n",
      "48 sent features db saved\n",
      "48 doc sent saved\n",
      "48 sim_db sent saved\n",
      "49 sent lemma db saved\n",
      "49 sent count db saved\n",
      "49 sent features db saved\n",
      "49 doc sent saved\n",
      "49 sim_db sent saved\n",
      "50 sent lemma db saved\n",
      "50 sent count db saved\n",
      "50 sent features db saved\n",
      "50 doc sent saved\n",
      "50 sim_db sent saved\n",
      "51 sent lemma db saved\n",
      "51 sent count db saved\n",
      "51 sent features db saved\n",
      "51 doc sent saved\n",
      "51 sim_db sent saved\n",
      "52 sent lemma db saved\n",
      "52 sent count db saved\n",
      "52 sent features db saved\n",
      "52 doc sent saved\n",
      "52 sim_db sent saved\n",
      "53 sent lemma db saved\n",
      "53 sent count db saved\n",
      "53 sent features db saved\n",
      "53 doc sent saved\n",
      "53 sim_db sent saved\n",
      "54 sent lemma db saved\n",
      "54 sent count db saved\n",
      "54 sent features db saved\n",
      "54 doc sent saved\n",
      "54 sim_db sent saved\n",
      "55 sent lemma db saved\n",
      "55 sent count db saved\n",
      "55 sent features db saved\n",
      "55 doc sent saved\n",
      "55 sim_db sent saved\n",
      "56 sent lemma db saved\n",
      "56 sent count db saved\n",
      "56 sent features db saved\n",
      "56 doc sent saved\n",
      "56 sim_db sent saved\n",
      "57 sent lemma db saved\n",
      "57 sent count db saved\n",
      "57 sent features db saved\n",
      "57 doc sent saved\n",
      "57 sim_db sent saved\n",
      "58 sent lemma db saved\n",
      "58 sent count db saved\n",
      "58 sent features db saved\n",
      "58 doc sent saved\n",
      "58 sim_db sent saved\n",
      "59 sent lemma db saved\n",
      "59 sent count db saved\n",
      "59 sent features db saved\n",
      "59 doc sent saved\n",
      "59 sim_db sent saved\n",
      "60 sent lemma db saved\n",
      "60 sent count db saved\n",
      "60 sent features db saved\n",
      "60 doc sent saved\n",
      "60 sim_db sent saved\n",
      "61 sent lemma db saved\n",
      "61 sent count db saved\n",
      "61 sent features db saved\n",
      "61 doc sent saved\n",
      "61 sim_db sent saved\n",
      "62 sent lemma db saved\n",
      "62 sent count db saved\n",
      "62 sent features db saved\n",
      "62 doc sent saved\n",
      "62 sim_db sent saved\n",
      "63 sent lemma db saved\n",
      "63 sent count db saved\n",
      "63 sent features db saved\n",
      "63 doc sent saved\n",
      "63 sim_db sent saved\n",
      "64 sent lemma db saved\n",
      "64 sent count db saved\n",
      "64 sent features db saved\n",
      "64 doc sent saved\n",
      "64 sim_db sent saved\n",
      "65 sent lemma db saved\n",
      "65 sent count db saved\n",
      "65 sent features db saved\n",
      "65 doc sent saved\n",
      "65 sim_db sent saved\n",
      "66 sent lemma db saved\n",
      "66 sent count db saved\n",
      "66 sent features db saved\n",
      "66 doc sent saved\n",
      "66 sim_db sent saved\n",
      "67 sent lemma db saved\n",
      "67 sent count db saved\n",
      "67 sent features db saved\n",
      "67 doc sent saved\n",
      "67 sim_db sent saved\n",
      "68 sent lemma db saved\n",
      "68 sent count db saved\n",
      "68 sent features db saved\n",
      "68 doc sent saved\n",
      "68 sim_db sent saved\n",
      "69 sent lemma db saved\n",
      "69 sent count db saved\n",
      "69 sent features db saved\n",
      "69 doc sent saved\n",
      "69 sim_db sent saved\n",
      "70 sent lemma db saved\n",
      "70 sent count db saved\n",
      "70 sent features db saved\n",
      "70 doc sent saved\n",
      "70 sim_db sent saved\n",
      "71 sent lemma db saved\n",
      "71 sent count db saved\n",
      "71 sent features db saved\n",
      "71 doc sent saved\n",
      "71 sim_db sent saved\n",
      "72 sent lemma db saved\n",
      "72 sent count db saved\n",
      "72 sent features db saved\n",
      "72 doc sent saved\n",
      "72 sim_db sent saved\n",
      "73 sent lemma db saved\n",
      "73 sent count db saved\n",
      "73 sent features db saved\n",
      "73 doc sent saved\n",
      "73 sim_db sent saved\n",
      "74 sent lemma db saved\n",
      "74 sent count db saved\n",
      "74 sent features db saved\n",
      "74 doc sent saved\n",
      "74 sim_db sent saved\n",
      "75 sent lemma db saved\n",
      "75 sent count db saved\n",
      "75 sent features db saved\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75 doc sent saved\n",
      "75 sim_db sent saved\n",
      "76 sent lemma db saved\n",
      "76 sent count db saved\n",
      "76 sent features db saved\n",
      "76 doc sent saved\n",
      "76 sim_db sent saved\n",
      "77 sent lemma db saved\n",
      "77 sent count db saved\n",
      "77 sent features db saved\n",
      "77 doc sent saved\n",
      "77 sim_db sent saved\n",
      "78 sent lemma db saved\n",
      "78 sent count db saved\n",
      "78 sent features db saved\n",
      "78 doc sent saved\n",
      "78 sim_db sent saved\n",
      "79 sent lemma db saved\n",
      "79 sent count db saved\n",
      "79 sent features db saved\n",
      "79 doc sent saved\n",
      "79 sim_db sent saved\n",
      "80 sent lemma db saved\n",
      "80 sent count db saved\n",
      "80 sent features db saved\n",
      "80 doc sent saved\n",
      "80 sim_db sent saved\n"
     ]
    }
   ],
   "source": [
    "ft = feature_utils.load_fasstex_model()\n",
    "imp.reload(feature_utils)\n",
    "for idx in range(1,81):\n",
    "    feature_utils.save_doc_features(dir_name,int(idx),ft)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "610886eb",
   "metadata": {},
   "source": [
    "## Build TfIdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "909c2a92",
   "metadata": {},
   "outputs": [],
   "source": [
    "json_path = os.path.join(os.getcwd(),defines.PATH_TO_DFS,dir_name,\"my_stop_words.json\")\n",
    "with open(json_path, 'r') as fp:\n",
    "    my_stop_words = json.load(fp)\n",
    "\n",
    "json_path = os.path.join(os.getcwd(),defines.PATH_TO_DFS,dir_name,\"my_stop_lemmas.json\")\n",
    "with open(json_path, 'r') as fp:\n",
    "    my_stop_lemmas = json.load(fp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "e3cf4b03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TfIdf char_wb vocab size 33021\n",
      "Sample of 33021 features\n",
      "[' 12', ' 123', ' 123 ', ' CB', ' CBT', ' CBT ', ' X ', ' XX', ' XXX', ' XXX ', ' be', ' be ', ' fa', ' fak', ' fake', ' he', ' he ', ' i ', ' il', ' ill']\n",
      "['ופי ', 'ופיה', 'ופיה ', 'ופיי', 'ופיל', 'ופיל ', 'ופים', 'ופים ', 'ופיע', 'ופיעה', 'ופית', 'ופית ', 'ופך', 'ופך ', 'ופכ', 'ופכי', 'ופכים', 'ופכת', 'ופכת ', 'ופל']\n",
      "[' 12', ' ותע', ' עזבת', 'בדייט', 'הימנע', 'ופית', 'יסים', 'מגיע', 'סכין', 'רימינ', '״ר ']\n",
      "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 TfIdf lemma vocab size 9501\n",
      "Sample of 9501 features\n",
      "['CBT', 'CBTיסטי', 'CLIENT', 'CLIENTבנתיים', 'Cach', 'DO', 'Fake', 'HAVE', 'HIV', 'HR', 'Inciden', 'LIST', 'Lierally', 'NICE', 'NLP', 'OCD', 'OFF', 'ON', 'SAY', 'SMS']\n",
      "['ליטוף', 'ליטוש', 'ליטף', 'ליטר', 'ליי', 'ליידי', 'לייט', 'ליין', 'ליינדים', 'ליינים', 'לייף', 'לייקים', 'ליכאילו', 'ליכון', 'ליל', 'לילה', 'לים', 'לימד', 'לימוד', 'לימודי']\n",
      "['CBT', 'בארון', 'הגרלה', 'התחזקות', 'חשוך', 'לייף', 'מפורים', 'סטיגה', 'פרכוס', 'שואל', 'תתשומת']\n",
      "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 TfIdf word vocab size 25819\n",
      "Sample of 25819 features\n",
      "['123', 'CBT', 'CBTיסטי', 'CLIENT', 'CLIENTבנתיים', 'Cach', 'DO', 'Fake', 'HAVE', 'HR', 'Inciden', 'LIST', 'Lierally', 'NICE', 'NLP', 'OCD', 'ON', 'SMS', 'THERAPIST', 'THERAPISTמה']\n",
      "['כשהשתחררתי', 'כשהשתכרתי', 'כשהתחושות', 'כשהתחילו', 'כשהתחלנו', 'כשהתחלת', 'כשהתחלתי', 'כשהתעוררת', 'כשהתפניתי', 'כשווה', 'כשזה', 'כשחווים', 'כשחור', 'כשחזרתי', 'כשחיפשתי', 'כשחליתי', 'כשחקרתי', 'כשחשבת', 'כשחשבתי', 'כשחתמתי']\n",
      "['123', 'בניסן', 'החנייה', 'התחילו', 'ועוצמתי', 'כשזה', 'מאמנת', 'מרחמת', 'פירוק', 'שילדים']\n",
      "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 "
     ]
    }
   ],
   "source": [
    "imp.reload(feature_utils)\n",
    "stop_words_num=102\n",
    "stop_lemmas_num=100\n",
    "tf_suffix='_stop'\n",
    "tf_char = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=False,per_lemma=False,analyzer=\"char_wb\")\n",
    "tf_lemma = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=True,per_lemma=True,analyzer=\"word\",stop_words=my_stop_words,tf_suffix=tf_suffix)\n",
    "tf_word = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=True,per_lemma=False,analyzer=\"word\",stop_words=my_stop_lemmas,tf_suffix=tf_suffix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "3fc79495",
   "metadata": {},
   "outputs": [],
   "source": [
    "tf_features = {}\n",
    "tf_features['word'] = tf_word.get_feature_names_out()\n",
    "tf_features['lemma'] = tf_lemma.get_feature_names_out()\n",
    "tf_features['char_wb'] = tf_char.get_feature_names_out()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "f82f0942",
   "metadata": {},
   "outputs": [],
   "source": [
    "imp.reload(common_utils)\n",
    "tf_f_list  =common_utils.convert_to_list(tf_features)\n",
    "json_path = os.path.join(os.getcwd(),defines.PATH_TO_DFS,dir_name,\"tf_features_map.json\")\n",
    "with open(json_path, 'w') as fp:\n",
    "    json.dump(tf_f_list, fp,ensure_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9a218775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'reparse'"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "15053f3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TfIdf char_wb vocab size 33038\n",
      "Sample of 33038 features\n",
      "[' 12', ' 123', ' 123 ', ' CB', ' CBT', ' CBT ', ' X ', ' XX', ' XXX', ' XXX ', ' be', ' be ', ' fa', ' fak', ' fake', ' he', ' he ', ' i ', ' il', ' ill']\n",
      "['ופט ', 'ופטי', 'ופטים', 'ופטימ', 'ופי', 'ופי ', 'ופיה', 'ופיה ', 'ופיי', 'ופיל', 'ופיל ', 'ופים', 'ופים ', 'ופיע', 'ופיעה', 'ופית', 'ופית ', 'ופך', 'ופך ', 'ופכ']\n",
      "[' 12', ' ותמי', ' עזו', 'בדיד', 'הימי', 'ופים', 'יסר', 'מגלה ', 'סכמ', 'ריעו']\n",
      "0 1 2 "
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zsofya/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n",
      "  warnings.warn(msg, category=FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 TfIdf lemma vocab size 3215\n",
      "Sample of 3215 features\n",
      "['CBT', 'XXX', 'be', 'fake', 'he', 'ill', 'make', 'mean', 'of', 'over', 'you', 'אאוט', 'אאוטסיידר', 'אב', 'אבא', 'אבחון', 'אבחן', 'אבטח', 'אביב', 'אבל']\n",
      "['לגבי', 'לגיטימי', 'לגיטימציה', 'לגמרי', 'להיום', 'להיפך', 'להקה', 'לוואי', 'לוז', 'לום', 'לומד', 'לזה', 'לח', 'לחוץ', 'לחיץ', 'לחיצה', 'לחלוטין', 'לחם', 'לחץ', 'ליבן']\n",
      "['CBT', 'בזמנו', 'הוכח', 'התחייב', 'חשד', 'לח', 'מעקב', 'סדר', 'פסיכולוגיה', 'שאמרת']\n",
      "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 "
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zsofya/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n",
      "  warnings.warn(msg, category=FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 TfIdf word vocab size 5529\n",
      "Sample of 5529 features\n",
      "['123', 'CBT', 'XXX', 'be', 'fake', 'he', 'ill', 'make', 'mean', 'of', 'you', 'אאוט', 'אאוטסיידר', 'אבא', 'אבדוק', 'אבוא', 'אבחון', 'אביא', 'אביב', 'אבין']\n",
      "['לגן', 'לגעת', 'לגרום', 'לגשר', 'לגשת', 'לדאוג', 'לדבר', 'לדברים', 'לדוגמא', 'לדוגמה', 'לדחוף', 'לדחות', 'לדייט', 'לדייטים', 'לדירה', 'לדמיין', 'לדעת', 'לדעתי', 'לדעתך', 'לדרוש']\n",
      "['123', 'בינתיים', 'הגבול', 'הקליפ', 'חודשיים', 'לדחות', 'מבואס', 'מקרין', 'עליך', 'שהן']\n",
      "0 1 2 3 4 5 6 7 8 9 10 11 12 13 "
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/zsofya/jupyter_git/jup-nb-generic/lib/python3.8/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n",
      "  warnings.warn(msg, category=FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 "
     ]
    }
   ],
   "source": [
    "imp.reload(feature_utils)\n",
    "\n",
    "tf_suffix=''\n",
    "tf_char = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=False,per_lemma=False,analyzer=\"char_wb\")\n",
    "tf_lemma = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=True,per_lemma=True,analyzer=\"word\")\n",
    "tf_word = feature_utils.tfidf_build_all_save_per_doc(dir_name,per_word=True,per_lemma=False,analyzer=\"word\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "abc191fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "tf_features = {}\n",
    "tf_features['word'] = tf_word.get_feature_names_out()\n",
    "tf_features['lemma'] = tf_lemma.get_feature_names_out()\n",
    "tf_features['char_wb'] = tf_char.get_feature_names_out()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c3890387",
   "metadata": {},
   "outputs": [],
   "source": [
    "imp.reload(common_utils)\n",
    "tf_f_list  =common_utils.convert_to_list(tf_features)\n",
    "json_path = os.path.join(os.getcwd(),defines.PATH_TO_DFS,dir_name,\"tf_features.no.stop_map.json\")\n",
    "with open(json_path, 'w') as fp:\n",
    "    json.dump(tf_f_list, fp,ensure_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "b951d69a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import model_utils\n",
    "imp.reload(model_utils)\n",
    "y=[['a','a'],['b','b','b'],['c','c','c','c'],['d','d']]\n",
    "g=[0,1,2,0]\n",
    "fg=model_utils.flatten_groups(g,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "306224ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 0, 1, 1, 1, 2, 2, 2, 2, 0, 0]"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "164c6987",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Once deleted, variables cannot be recovered. Proceed (y/[n])? y\n"
     ]
    }
   ],
   "source": [
    "%reset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "374a2749",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
